<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
	<http:listener-config name="HTTP_Listener_Configuration"
		host="localhost" port="8081" doc:name="HTTP Listener Configuration" />
	<db:mysql-config name="MySQL_Configuration" host="localhost"
		port="3306" user="soa-fiap" password="soa-fiap" database="store"
		doc:name="MySQL Configuration" />
	<jms:activemq-connector name="Active_MQ"
		username="admin" password="admin" brokerURL="tcp://localhost:61616"
		validateConnections="true" maxRedelivery="1000" doc:name="Active MQ" />
	<json:json-to-object-transformer name="JSON_to_Object"
		doc:name="JSON to Object" />
	<json:object-to-json-transformer name="Object_to_JSON"
		doc:name="Object to JSON" />
	<mulexml:xml-to-object-transformer
		name="XML_to_Object" doc:name="XML to Object" />
	<json:xml-to-json-transformer name="XML_to_JSON"
		doc:name="XML to JSON" />
	<jms:activemq-connector name="Active_MQ1"
		username="admin" password="admin" brokerURL="tcp://localhost:61616"
		validateConnections="true" doc:name="Active MQ" />
	<flow name="CLIENT_FLOW">
		<jms:inbound-endpoint exchange-pattern="request-response"
			queue="client" connector-ref="Active_MQ" doc:name="JMS_CLIENT" />
		<set-variable variableName="action" value="#[xpath:/store/action]"
			doc:name="ACTION" />
		<choice doc:name="Choice">
			<when expression="#[flowVars.action == &quot;insert&quot;]">
				<db:insert config-ref="MySQL_Configuration" doc:name="CLIENT_INSERT">
					<db:parameterized-query><![CDATA[insert into store.client values (
null,
#[xpath:/store/client/name],
#[xpath:/store/client/cpf],
#[xpath:/store/client/rg],
#[xpath:/store/client/address_home],
#[xpath:/store/client/address_delivery],
#[xpath:/store/client/phone_home],
#[xpath:/store/client/phone_mobile],
now() 
)]]></db:parameterized-query>
				</db:insert>
			</when>
			<when expression="#[flowVars.action == &quot;update&quot;]">
				<db:update config-ref="MySQL_Configuration" doc:name="CLIENT_UPDATE">
					<db:parameterized-query><![CDATA[update store.client set
name = #[xpath:/store/client/name],
cpf = #[xpath:/store/client/cpf],
rg = #[xpath:/store/client/rg],
address_home = #[xpath:/store/client/address_home],
address_delivery = #[xpath:/store/client/address_delivery],
phone_home = #[xpath:/store/client/phone_home],
phone_mobile = #[xpath:/store/client/phone_mobile]
where id = #[xpath:/store/client/id]]]></db:parameterized-query>
				</db:update>
			</when>
			<when expression="#[flowVars.action == &quot;delete&quot;]">
				<db:delete config-ref="MySQL_Configuration" doc:name="CLIENT_DELETE">
					<db:parameterized-query><![CDATA[delete from store.client 
 where id = #[xpath:/store/client/id]]]></db:parameterized-query>
				</db:delete>
			</when>
			<otherwise>
				<db:select config-ref="MySQL_Configuration" doc:name="CLIENT_SELECT">
					<db:parameterized-query><![CDATA[select * from store.client where cpf = #[xpath:/store/client/cpf]]]></db:parameterized-query>
				</db:select>
			</otherwise>
		</choice>
        <response>
            <json:object-to-json-transformer doc:name="Object to JSON"/>
        </response>
	</flow>
	<flow name="PRODUCT_FLOW">
		<jms:inbound-endpoint exchange-pattern="request-response"
			queue="product" connector-ref="Active_MQ" doc:name="JMS_PRODUCT" />
		<set-variable variableName="action" value="#[xpath:/store/action]"
			doc:name="ACTION" />
		<choice doc:name="Choice">
			<when expression="#[flowVars.action == &quot;insert&quot;]">
				<db:insert config-ref="MySQL_Configuration" doc:name="PRODUCT_INSERT">
					<db:parameterized-query><![CDATA[insert into product values (
#[xpath:/store/product/id],
#[xpath:/store/product/name],
#[xpath:/store/product/quantity],
#[xpath:/store/product/price],
#[xpath:/store/product/max_discount_percent],
#[xpath:/store/product/out_line_store],
#[xpath:/store/product/out_line_factory],
now()
);]]></db:parameterized-query>
				</db:insert>
			</when>
			<when expression="#[flowVars.action == &quot;update&quot;]">
				<db:update config-ref="MySQL_Configuration" doc:name="PRODUCT_UPDATE">
					<db:parameterized-query><![CDATA[update product set
name = '#[xpath:/store/product/name]',
quantity = #[xpath:/store/product/quantity],
price = #[xpath:/store/product/price],
max_discount_percent = #[xpath:/store/product/max_discount_percent],
out_line_store = #[xpath:/store/product/out_line_store],
out_line_factory = #[xpath:/store/product/out_line_factory],
where id = #[xpath:/store/product/id]]]></db:parameterized-query>
				</db:update>
			</when>
			<when expression="#[flowVars.action == &quot;delete&quot;]">
				<db:delete config-ref="MySQL_Configuration" doc:name="PRODUCT_DELETE">
					<db:parameterized-query><![CDATA[delete from product 
where id = #[xpath:/store/product/id]]]></db:parameterized-query>
				</db:delete>
			</when>
			<otherwise>
				<db:select config-ref="MySQL_Configuration" doc:name="PRODUCT_SELECT">
					<db:parameterized-query><![CDATA[select * from product 
where id = #[xpath:/store/product/id]]]></db:parameterized-query>
				</db:select>
			</otherwise>
		</choice>
        <response>
            <json:object-to-json-transformer doc:name="Object to JSON"/>
        </response>
	</flow>
	<flow name="ORDER_FLOW">
		<jms:inbound-endpoint exchange-pattern="request-response"
			queue="order" connector-ref="Active_MQ" doc:name="JMS" />
        <set-variable variableName="action" value="#[xpath:/store/action]" doc:name="ACTION"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.action == &quot;create&quot;]">
                <db:insert config-ref="MySQL_Configuration" autoGeneratedKeys="true" autoGeneratedKeysColumnNames="id" doc:name="CREATE_ORDER">
                    <db:parameterized-query><![CDATA[insert into store.order values (
null,
now(),
#[xpath:/store/order/client/id],
#[xpath:/store/order/total]
);]]></db:parameterized-query>
                </db:insert>
                <logger message="#[message.payload]" level="INFO" doc:name="Logger"/>
            </when>
            <when expression="#[flowVars.action == &quot;addProducts&quot;]">
                <set-variable variableName="orderId" value="#[xpath:/store/order/id]" doc:name="orderId"/>
                <foreach collection="#[xpath3('/store/order/products/product',payload,'NODESET')]" doc:name="forEachProducts">
                    <set-variable variableName="productId" value="#[xpath:id]" doc:name="productId"/>
                    <set-variable variableName="productQuantity" value="#[xpath:quantity]" doc:name="productQuantity"/>
                    <logger message="#[flowVars.orderId] #[flowVars.productId] #[flowVars.productQuantity]" level="INFO" doc:name="Logger"/>
                    <db:insert config-ref="MySQL_Configuration" doc:name="ORDER_ADD_PRODUCTS">
                        <db:parameterized-query><![CDATA[insert into store.order_product values (
null,
#[flowVars.orderId],
#[flowVars.productId],
#[flowVars.productQuantity]
);]]></db:parameterized-query>
                    </db:insert>
                </foreach>
            </when>
        </choice>
        <response>
            <json:object-to-json-transformer doc:name="Object to JSON"/>
        </response>
	</flow>
</mule>
