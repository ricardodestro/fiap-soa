/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fiap.soa;

import javax.swing.UnsupportedLookAndFeelException;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author destro
 */
public class Client extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Client() {
        initComponents();

        PanelClientData.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Message = new javax.swing.JPanel();
        logMessage = new javax.swing.JTextField();
        PanelClientData = new javax.swing.JPanel();
        labelName = new javax.swing.JLabel();
        clientName = new javax.swing.JTextField();
        labelAddressHome = new javax.swing.JLabel();
        clientAddressHome = new javax.swing.JTextField();
        labelAddressDelivery = new javax.swing.JLabel();
        clientAddressDelivery = new javax.swing.JTextField();
        labelPhoneHome = new javax.swing.JLabel();
        clientPhoneHome = new javax.swing.JTextField();
        labelPhoneMobile = new javax.swing.JLabel();
        clientPhoneMobile = new javax.swing.JTextField();
        clientDataButton = new javax.swing.JButton();
        labelRG = new javax.swing.JLabel();
        clientRG = new javax.swing.JTextField();
        clientDataDeleteButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cpfSearchButton = new javax.swing.JButton();
        cpf = new javax.swing.JTextField();
        labelCPF = new javax.swing.JLabel();
        labelTitle = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuClient = new javax.swing.JMenu();
        menuProduct = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Clientes");
        setName("frameClient"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Message.setBorder(javax.swing.BorderFactory.createTitledBorder("Avisos"));
        Message.setToolTipText("");

        logMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logMessageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MessageLayout = new javax.swing.GroupLayout(Message);
        Message.setLayout(MessageLayout);
        MessageLayout.setHorizontalGroup(
            MessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logMessage, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        MessageLayout.setVerticalGroup(
            MessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
        );

        getContentPane().add(Message, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 649, 70));

        PanelClientData.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Dados")));
        PanelClientData.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                PanelClientDataComponentHidden(evt);
            }
        });
        PanelClientData.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelName.setText("Nome");
        PanelClientData.add(labelName, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 54, -1, -1));
        PanelClientData.add(clientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 49, 359, -1));

        labelAddressHome.setText("Endereço");
        PanelClientData.add(labelAddressHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 87, -1, -1));
        PanelClientData.add(clientAddressHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 82, 359, -1));

        labelAddressDelivery.setText("Endereço de entrega");
        PanelClientData.add(labelAddressDelivery, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 120, -1, -1));
        PanelClientData.add(clientAddressDelivery, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 115, 359, -1));

        labelPhoneHome.setText("Telefone");
        PanelClientData.add(labelPhoneHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 153, -1, -1));
        PanelClientData.add(clientPhoneHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 148, 171, -1));

        labelPhoneMobile.setText("Celular");
        PanelClientData.add(labelPhoneMobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 181, -1, -1));
        PanelClientData.add(clientPhoneMobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 181, 171, -1));

        clientDataButton.setText("Inserir / Atualizar");
        clientDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientDataButtonActionPerformed(evt);
            }
        });
        PanelClientData.add(clientDataButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 240, 180, -1));

        labelRG.setText("RG");
        PanelClientData.add(labelRG, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 216, -1, -1));
        PanelClientData.add(clientRG, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 214, 171, -1));

        clientDataDeleteButton.setText("Excluir");
        clientDataDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientDataDeleteButtonActionPerformed(evt);
            }
        });
        PanelClientData.add(clientDataDeleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 240, -1, -1));

        getContentPane().add(PanelClientData, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 650, 280));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisa"));

        cpfSearchButton.setText("Pesquisar");
        cpfSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfSearchButtonActionPerformed(evt);
            }
        });

        cpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfActionPerformed(evt);
            }
        });

        labelCPF.setText("CPF");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelCPF)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cpf, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cpfSearchButton)
                .addContainerGap(367, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCPF)
                    .addComponent(cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpfSearchButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 650, 70));

        labelTitle.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        labelTitle.setText("Cadastro de Clientes");
        getContentPane().add(labelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        menuClient.setText("Clientes");
        menuClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuClientMouseClicked(evt);
            }
        });
        menuClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuClientActionPerformed(evt);
            }
        });
        jMenuBar1.add(menuClient);

        menuProduct.setText("Produtos");
        menuProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuProductMouseClicked(evt);
            }
        });
        menuProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuProductActionPerformed(evt);
            }
        });
        jMenuBar1.add(menuProduct);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpfActionPerformed

    private void cpfSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfSearchButtonActionPerformed

        String message = "<store><action>select</action><client><cpf>" + cpf.getText() + "</cpf></client></store>";

        BrokerService bs = new BrokerService("client", message);

        String response = null;

        try {
            response = bs.getMessage();
        } catch (Exception e) {
            logMessage.setText("[ER] " + e.getMessage());
            return;
        }

        try {
            JSONArray jsonList = new JSONArray(response);

            if (jsonList.length() == 0) {
                PanelClientData.setVisible(true);
                clientDataDeleteButton.setVisible(false);
                clientDataButton.setText("Cadastrar");

                logMessage.setText("Cliente não cadastrado");
            } else {
                PanelClientData.setVisible(true);
                clientDataDeleteButton.setVisible(true);
                clientDataButton.setText("Efetuar pedido");

                logMessage.setText("Cliente cadastrado");

                JSONObject json = jsonList.getJSONObject(0);
                clientId = json.getInt("id");
                clientRG.setText(json.optString("rg", ""));
                clientName.setText(json.optString("name", ""));
                clientAddressHome.setText(json.optString("address_home", ""));
                clientAddressDelivery.setText(json.optString("address_delivery", ""));
                clientPhoneHome.setText(json.optString("phone_home", ""));
                clientPhoneMobile.setText(json.optString("phone_mobile", ""));
            }

        } catch (JSONException e) {
            e.printStackTrace();
            System.out.println(response);
            logMessage.setText("[ER] " + e.getMessage());
        }
    }//GEN-LAST:event_cpfSearchButtonActionPerformed

    private void logMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logMessageActionPerformed

    private void PanelClientDataComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_PanelClientDataComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_PanelClientDataComponentHidden

    private void clientDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientDataButtonActionPerformed

        if (clientDataButton.getText().equalsIgnoreCase("cadastrar")) {
            // Insert
            StringBuilder sb = new StringBuilder();
            sb.append("<store>");
            sb.append("<action>");
            sb.append("insert");
            sb.append("</action>");
            sb.append("<client>");

            sb.append("<name>");
            sb.append(clientName.getText());
            sb.append("</name>");

            sb.append("<cpf>");
            sb.append(cpf.getText());
            sb.append("</cpf>");

            sb.append("<rg>");
            sb.append(clientRG.getText());
            sb.append("</rg>");

            sb.append("<address_home>");
            sb.append(clientAddressHome.getText());
            sb.append("</address_home>");

            sb.append("<address_delivery>");
            sb.append(clientAddressDelivery.getText());
            sb.append("</address_delivery>");

            sb.append("<phone_home>");
            sb.append(clientPhoneHome.getText());
            sb.append("</phone_home>");

            sb.append("<phone_mobile>");
            sb.append(clientPhoneMobile.getText());
            sb.append("</phone_mobile>");

            sb.append("</client>");
            sb.append("</store>");

            System.out.println(sb.toString());

            BrokerService bs = new BrokerService("client", sb.toString());

            String response = null;

            try {
                response = bs.getMessage();
            } catch (Exception e) {
                logMessage.setText("[ER] " + e.getMessage());
                return;
            }

            if (response.equals("1")) {
                logMessage.setText("Cliente cadastrado com sucesso");
                clientDataButton.setText("Efetuar pedido");
            }
        } else {
            // Update
            StringBuilder sb = new StringBuilder();
            sb.append("<store>");
            sb.append("<action>");
            sb.append("update");
            sb.append("</action>");
            sb.append("<client>");

            sb.append("<id>");
            sb.append(clientId);
            sb.append("</id>");

            sb.append("<name>");
            sb.append(clientName.getText());
            sb.append("</name>");

            sb.append("<cpf>");
            sb.append(cpf.getText());
            sb.append("</cpf>");

            sb.append("<rg>");
            sb.append(clientRG.getText());
            sb.append("</rg>");

            sb.append("<address_home>");
            sb.append(clientAddressHome.getText());
            sb.append("</address_home>");

            sb.append("<address_delivery>");
            sb.append(clientAddressDelivery.getText());
            sb.append("</address_delivery>");

            sb.append("<phone_home>");
            sb.append(clientPhoneHome.getText());
            sb.append("</phone_home>");

            sb.append("<phone_mobile>");
            sb.append(clientPhoneMobile.getText());
            sb.append("</phone_mobile>");

            sb.append("</client>");
            sb.append("</store>");

            BrokerService bs = new BrokerService("client", sb.toString());

            String response = null;

            try {
                response = bs.getMessage();
            } catch (Exception e) {
                logMessage.setText("[ER] " + e.getMessage());
                return;
            }

            // Tela de pedidos
            logMessage.setText("Cliente atualizado com sucesso");

            Order order = new Order(clientId, cpf.getText(), clientName.getText());
            order.setVisible(true);
            this.dispose();
        }

    }//GEN-LAST:event_clientDataButtonActionPerformed

    private void clientDataDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientDataDeleteButtonActionPerformed
        // Delete
        StringBuilder sb = new StringBuilder();
        sb.append("<store>");
        sb.append("<action>");
        sb.append("delete");
        sb.append("</action>");
        sb.append("<client>");

        sb.append("<id>");
        sb.append(clientId);
        sb.append("</id>");

        sb.append("</client>");
        sb.append("</store>");

        BrokerService bs = new BrokerService("client", sb.toString());

        String response = null;

        try {
            response = bs.getMessage();
        } catch (Exception e) {
            logMessage.setText("[ER] " + e.getMessage());
            return;
        }

        PanelClientData.setVisible(false);
        clientDataButton.setVisible(false);
        logMessage.setText("Cliente excluído com sucesso");
    }//GEN-LAST:event_clientDataDeleteButtonActionPerformed

    private void menuClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuClientActionPerformed
    }//GEN-LAST:event_menuClientActionPerformed

    private void menuProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuProductActionPerformed
        Product product = new Product();
        product.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_menuProductActionPerformed

    private void menuClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuClientMouseClicked
        Client client = new Client();
        client.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_menuClientMouseClicked

    private void menuProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuProductMouseClicked
        Product product = new Product();
        product.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_menuProductMouseClicked

    /**
     * @param args the command line arguments
     * @throws java.lang.ClassNotFoundException
     * @throws javax.swing.UnsupportedLookAndFeelException
     * @throws java.lang.InstantiationException
     * @throws java.lang.IllegalAccessException
     */
    public static void main(String args[]) throws ClassNotFoundException, UnsupportedLookAndFeelException, InstantiationException, IllegalAccessException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("com.sun.java.swing.plaf.gtk.GTKLookAndFeel".equals(info.getClassName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Client().setVisible(true);
        });
    }

    private int clientId;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Message;
    private javax.swing.JPanel PanelClientData;
    private javax.swing.JTextField clientAddressDelivery;
    private javax.swing.JTextField clientAddressHome;
    private javax.swing.JButton clientDataButton;
    private javax.swing.JButton clientDataDeleteButton;
    private javax.swing.JTextField clientName;
    private javax.swing.JTextField clientPhoneHome;
    private javax.swing.JTextField clientPhoneMobile;
    private javax.swing.JTextField clientRG;
    private javax.swing.JTextField cpf;
    private javax.swing.JButton cpfSearchButton;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelAddressDelivery;
    private javax.swing.JLabel labelAddressHome;
    private javax.swing.JLabel labelCPF;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPhoneHome;
    private javax.swing.JLabel labelPhoneMobile;
    private javax.swing.JLabel labelRG;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JTextField logMessage;
    private javax.swing.JMenu menuClient;
    private javax.swing.JMenu menuProduct;
    // End of variables declaration//GEN-END:variables
}
