/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fiap.soa;

import javax.swing.UnsupportedLookAndFeelException;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author destro
 */
public class Product extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Product() {
        initComponents();

        PanelClientData.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Message = new javax.swing.JPanel();
        logMessage = new javax.swing.JTextField();
        PanelClientData = new javax.swing.JPanel();
        labelName = new javax.swing.JLabel();
        productName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        productQuantity = new javax.swing.JTextField();
        labelProductPrice = new javax.swing.JLabel();
        productPrice = new javax.swing.JTextField();
        labelMaxDiscount = new javax.swing.JLabel();
        productMaxDiscount = new javax.swing.JTextField();
        productDataUpdateButton = new javax.swing.JButton();
        productDataDeleteButton = new javax.swing.JButton();
        productOutLineStore = new javax.swing.JCheckBox();
        productOutLineFactory = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        productIdSearchButton = new javax.swing.JButton();
        productId = new javax.swing.JTextField();
        labelProductId = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuClient = new javax.swing.JMenu();
        menuProduct = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Produtos");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Message.setBorder(javax.swing.BorderFactory.createTitledBorder("Avisos"));
        Message.setToolTipText("");

        logMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logMessageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MessageLayout = new javax.swing.GroupLayout(Message);
        Message.setLayout(MessageLayout);
        MessageLayout.setHorizontalGroup(
            MessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logMessage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
        );
        MessageLayout.setVerticalGroup(
            MessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
        );

        getContentPane().add(Message, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 649, 70));

        PanelClientData.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Dados")));
        PanelClientData.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                PanelClientDataComponentHidden(evt);
            }
        });
        PanelClientData.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelName.setText("Nome");
        PanelClientData.add(labelName, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 54, -1, -1));
        PanelClientData.add(productName, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 49, 359, -1));

        jLabel3.setText("Quantidade");
        PanelClientData.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 87, -1, -1));
        PanelClientData.add(productQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 82, 70, -1));

        labelProductPrice.setText("Preço Unitário");
        PanelClientData.add(labelProductPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 120, -1, -1));
        PanelClientData.add(productPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 115, 100, -1));

        labelMaxDiscount.setText("Desconto %");
        PanelClientData.add(labelMaxDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 153, -1, -1));
        PanelClientData.add(productMaxDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 148, 80, -1));

        productDataUpdateButton.setText("Atualiza");
        productDataUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productDataUpdateButtonActionPerformed(evt);
            }
        });
        PanelClientData.add(productDataUpdateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 240, 90, -1));

        productDataDeleteButton.setText("Excluir");
        productDataDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productDataDeleteButtonActionPerformed(evt);
            }
        });
        PanelClientData.add(productDataDeleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 240, -1, -1));

        productOutLineStore.setText("Fora de linha na empresa");
        PanelClientData.add(productOutLineStore, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        productOutLineFactory.setText("Fora de linha de fabrica");
        PanelClientData.add(productOutLineFactory, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        getContentPane().add(PanelClientData, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 650, 280));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisa"));

        productIdSearchButton.setText("Pesquisar");
        productIdSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productIdSearchButtonActionPerformed(evt);
            }
        });

        productId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productIdActionPerformed(evt);
            }
        });

        labelProductId.setText("ID");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelProductId)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productId, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productIdSearchButton)
                .addContainerGap(375, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelProductId)
                    .addComponent(productId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productIdSearchButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 650, 70));

        jLabel8.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        jLabel8.setText("Cadastro de Produtos");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        menuClient.setText("Client");
        menuClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuClientMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuClient);

        menuProduct.setText("Product");
        menuProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuProductMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuProduct);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void productIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productIdActionPerformed

    private void productIdSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productIdSearchButtonActionPerformed

        String message = "<store><action>select</action><product><id>" + productId.getText() + "</id></product></store>";

        BrokerService bs = new BrokerService("product", message);

        String response = null;

        try {
            response = bs.getMessage();
        } catch (Exception e) {
            logMessage.setText("[ER] " + e.getMessage());
            return;
        }

        try {
            JSONArray jsonList = new JSONArray(response);

            if (jsonList.length() == 0) {
                PanelClientData.setVisible(true);
                productDataDeleteButton.setVisible(false);
                productDataUpdateButton.setText("Cadastrar");

                productName.setText("");
                productQuantity.setText("");
                productPrice.setText("");
                productMaxDiscount.setText("");
                productOutLineStore.setSelected(false);
                productOutLineFactory.setSelected(false);

                logMessage.setText("Produto não cadastrado");
            } else {
                PanelClientData.setVisible(true);
                productDataDeleteButton.setVisible(true);
                productDataUpdateButton.setText("Atualizar");

                logMessage.setText("Produto cadastrado");

                JSONObject json = jsonList.getJSONObject(0);

                productName.setText(json.optString("name", ""));
                productQuantity.setText(json.optString("quantity", ""));
                productPrice.setText(json.optString("price", ""));
                productMaxDiscount.setText(json.optString("max_discount_percent", ""));
                productOutLineStore.setSelected(json.optBoolean("out_line_store", false));
                productOutLineFactory.setSelected(json.optBoolean("out_line_factory", false));
            }

        } catch (JSONException e) {
            e.printStackTrace();
            System.out.println(response);
            logMessage.setText("[ER] " + e.getMessage());
        }
    }//GEN-LAST:event_productIdSearchButtonActionPerformed

    private void logMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logMessageActionPerformed

    private void PanelClientDataComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_PanelClientDataComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_PanelClientDataComponentHidden

    private void productDataUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productDataUpdateButtonActionPerformed

        if (productDataUpdateButton.getText().equalsIgnoreCase("cadastrar")) {
            // Insert
            StringBuilder sb = new StringBuilder();
            sb.append("<store>");
            sb.append("<action>");
            sb.append("insert");
            sb.append("</action>");
            sb.append("<product>");

            sb.append("<id>");
            sb.append(productId.getText());
            sb.append("</id>");

            sb.append("<name>");
            sb.append(productName.getText());
            sb.append("</name>");

            sb.append("<quantity>");
            sb.append(productQuantity.getText());
            sb.append("</quantity>");

            sb.append("<price>");
            sb.append(productPrice.getText());
            sb.append("</price>");

            sb.append("<max_discount_percent>");
            sb.append(productMaxDiscount.getText());
            sb.append("</max_discount_percent>");

            sb.append("<out_line_store>");
            sb.append(productOutLineStore.isSelected() ? 1 : 0);
            sb.append("</out_line_store>");

            sb.append("<out_line_factory>");
            sb.append(productOutLineFactory.isSelected() ? 1 : 0);
            sb.append("</out_line_factory>");

            sb.append("</product>");
            sb.append("</store>");

            System.out.println(sb.toString());

            BrokerService bs = new BrokerService("product", sb.toString());

            String response = null;

            try {
                response = bs.getMessage();
            } catch (Exception e) {
                logMessage.setText("[ER] " + e.getMessage());
                return;
            }

            if (response.equals("1")) {
                logMessage.setText("Produto cadastrado com sucesso");
            }
        } else if (productDataUpdateButton.getText().equalsIgnoreCase("confirmar")) {
            // Update
            StringBuilder sb = new StringBuilder();
            sb.append("<store>");
            sb.append("<action>");
            sb.append("update");
            sb.append("</action>");
            sb.append("<product>");

            sb.append("<id>");
            sb.append(productId.getText());
            sb.append("</id>");

            sb.append("<name>");
            sb.append(productName.getText());
            sb.append("</name>");

            sb.append("<quantity>");
            sb.append(productQuantity.getText());
            sb.append("</quantity>");

            sb.append("<price>");
            sb.append(productPrice.getText());
            sb.append("</price>");

            sb.append("<max_discount_percent>");
            sb.append(productMaxDiscount.getText());
            sb.append("</max_discount_percent>");

            sb.append("<out_line_store>");
            sb.append(productOutLineStore.isSelected() ? 1 : 0);
            sb.append("</out_line_store>");

            sb.append("<out_line_factory>");
            sb.append(productOutLineFactory.isSelected() ? 1 : 0);
            sb.append("</out_line_factory>");

            sb.append("</product>");
            sb.append("</store>");

            BrokerService bs = new BrokerService("product", sb.toString());

            String response = null;

            try {
                response = bs.getMessage();
            } catch (Exception e) {
                logMessage.setText("[ER] " + e.getMessage());
                return;
            }

            logMessage.setText("Produto atualizado com sucesso");
        }
    }//GEN-LAST:event_productDataUpdateButtonActionPerformed

    private void productDataDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productDataDeleteButtonActionPerformed
        // Delete
        StringBuilder sb = new StringBuilder();
        sb.append("<store>");
        sb.append("<action>");
        sb.append("delete");
        sb.append("</action>");
        sb.append("<product>");

        sb.append("<id>");
        sb.append(productId.getText());
        sb.append("</id>");

        sb.append("</product>");
        sb.append("</store>");

        BrokerService bs = new BrokerService("product", sb.toString());

        String response = null;

        try {
            response = bs.getMessage();
        } catch (Exception e) {
            logMessage.setText("[ER] " + e.getMessage());
            return;
        }

        PanelClientData.setVisible(false);
        productDataUpdateButton.setVisible(false);
        logMessage.setText("Produto excluído com sucesso");
    }//GEN-LAST:event_productDataDeleteButtonActionPerformed

    private void menuClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuClientMouseClicked
        Client client = new Client();
        client.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_menuClientMouseClicked

    private void menuProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuProductMouseClicked
        Product product = new Product();
        product.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_menuProductMouseClicked

    /**
     * @param args the command line arguments
     * @throws java.lang.ClassNotFoundException
     * @throws javax.swing.UnsupportedLookAndFeelException
     * @throws java.lang.InstantiationException
     * @throws java.lang.IllegalAccessException
     */
    public static void main(String args[]) throws ClassNotFoundException, UnsupportedLookAndFeelException, InstantiationException, IllegalAccessException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("com.sun.java.swing.plaf.gtk.GTKLookAndFeel".equals(info.getClassName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Product().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Message;
    private javax.swing.JPanel PanelClientData;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelMaxDiscount;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelProductId;
    private javax.swing.JLabel labelProductPrice;
    private javax.swing.JTextField logMessage;
    private javax.swing.JMenu menuClient;
    private javax.swing.JMenu menuProduct;
    private javax.swing.JButton productDataDeleteButton;
    private javax.swing.JButton productDataUpdateButton;
    private javax.swing.JTextField productId;
    private javax.swing.JButton productIdSearchButton;
    private javax.swing.JTextField productMaxDiscount;
    private javax.swing.JTextField productName;
    private javax.swing.JCheckBox productOutLineFactory;
    private javax.swing.JCheckBox productOutLineStore;
    private javax.swing.JTextField productPrice;
    private javax.swing.JTextField productQuantity;
    // End of variables declaration//GEN-END:variables
}
